// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC1155/ERC1155.sol";

contract GameItems is ERC1155 {
    uint256 public constant GOLD = 0;
    uint256 public constant SILVER = 1;
    uint256 public constant THORS_HAMMER = 2;
    uint256 public constant SWORD = 3;
    uint256 public constant SHIELD = 4;

    event ItemTransferred(uint256 indexed itemId, address indexed from, address indexed to, uint256 amount);

    constructor() ERC1155("https://game.example/api/item/{id}.json") {
        _mint(msg.sender, GOLD, 10**18, "");
        _mint(msg.sender, SILVER, 10**27, "");
        _mint(msg.sender, THORS_HAMMER, 1, "");
        _mint(msg.sender, SWORD, 10**9, "");
        _mint(msg.sender, SHIELD, 10**9, "");
    }

    function mintItem(uint256 itemId, address account, uint256 amount) external {
        require(msg.sender == owner(), "Only the contract owner can mint items");
        _mint(account, itemId, amount, "");
    }

    function transferItem(uint256 itemId, address from, address to, uint256 amount) external {
        require(msg.sender == from, "Only the item owner can transfer items");
        safeTransferFrom(from, to, itemId, amount, "");
        emit ItemTransferred(itemId, from, to, amount);
    }

    function getItemBalance(uint256 itemId, address account) external view returns (uint256) {
        return balanceOf(account, itemId);
    }
}

